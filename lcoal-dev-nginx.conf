
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    map $http_upgrade $connection_upgrade{
        default upgrade;
        '' close;
    } 

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout;
    error_log /dev/stdout info;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;
    server {
        listen 80;
        server_name my.todo-list.com;

        # for local-dev
        location /sockjs-node {
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;

                proxy_pass http://host.docker.internal:3001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
        }
        
        location / {
                proxy_set_header origin_url $request_uri;
                proxy_set_header origin_method $request_method;                      
                proxy_pass http://host.docker.internal:3001;
        }

        location /v1/api {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

                rewrite ^/v1/api(.*)$ $1 break;

                proxy_pass http://host.docker.internal:3000;
        }

        # location /api/config {
        #         default_type application/json;
        #         set $host 'http://my.todo-list.com';
        #         return 200 '{ "host": "$host" }'; 
        # }
    }
}
